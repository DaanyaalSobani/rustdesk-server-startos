id: rustdesk-server-startos 
title: "Rustdesk Server StartOS"
version: 1.0.0.1
release-notes: "First Release"
license: mit
wrapper-repo: "https://github.com/DaanyaalSobani/rustdesk-server-startos"
upstream-repo: "https://github.com/rustdesk/rustdesk-server"
support-site: "https://rustdesk.com/docs/en/"
marketing-site: "https://rustdesk.com/"
build: ["make"]
description:
  short: Rustdesk Server on StartOs
  # This description will display with additional details in the service's individual marketplace page
  long: |
    Rustdesk is an open-source remote desktop software that allows you to control a computer remotely. It is written in Rust and uses the Tonic gRPC framework. This service is a Rustdesk server that can be used to control a computer remotely. This service is a wrapper around the Rustdesk server that allows it to be run on StartOS.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
health-checks: {}
config: ~
properties: ~
volumes:
  main:
    type: data
interfaces:
  main:
    name: Server
    description: Rustdesk Server
    tor-config:
      port-mapping:
        21115: "21115"
        21116: "21116"
        21117: "21117"
        21118: "21118"
        21119: "21119"
    lan-config:
      443:
        ssl: true
        internal: 21115
    # Denotes if the service has a user interface to display
    ui: false
    # Denotes the protocol specifications used by this interface
    protocols:
      - tcp
      - http
      - udp
dependencies: {}
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
